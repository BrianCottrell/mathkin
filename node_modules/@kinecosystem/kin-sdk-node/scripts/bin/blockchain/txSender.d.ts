import { Address, TransactionId, WhitelistPayload } from "../types";
import { Server } from "@kinecosystem/kin-sdk";
import { KeyPair } from "./keyPair";
import { TransactionBuilder } from "./transactionBuilder";
import { Channel } from "./channelsPool";
import { IBlockchainInfoRetriever } from "./blockchainInfoRetriever";
export declare class TxSender {
    private readonly _keypair;
    private readonly _appId;
    private readonly _server;
    private readonly _blockchainInfoRetriever;
    constructor(_keypair: KeyPair, _appId: string, _server: Server, _blockchainInfoRetriever: IBlockchainInfoRetriever);
    readonly appId: string;
    getTransactionBuilder(txFee: number, channel?: Channel): Promise<TransactionBuilder>;
    buildCreateAccount(address: Address, startingBalance: number, fee: number, memo?: string, channel?: Channel): Promise<TransactionBuilder>;
    buildSendKin(address: Address, amount: number, fee: number, memo?: string, channel?: Channel): Promise<TransactionBuilder>;
    submitTransaction(builder: TransactionBuilder): Promise<TransactionId>;
    whitelistTransaction(payload: string | WhitelistPayload): string;
    private checkForInsufficientChannelFeeBalance;
    private topUpChannel;
    private loadSenderAccountData;
}
