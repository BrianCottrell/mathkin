import { KeyPair } from "./keyPair";
import { TxSender } from "./txSender";
import { Environment } from "../environment";
import { IAccountDataRetriever } from "./accountDataRetriever";
import { IBlockchainInfoRetriever } from "./blockchainInfoRetriever";
export declare namespace Channels {
    function createChannels(params: CreateChannelsParams): Promise<KeyPair[]>;
    function generateSeeds(params: GenerateSeedsParams): KeyPair[];
}
export declare class ChannelsGenerator {
    private readonly _txSender;
    private readonly _accountDataRetriever;
    private _blockchainInfoRetriever;
    private static readonly CHANNELS_COUNT_LIMIT;
    static generateSeeds(params: GenerateSeedsParams): KeyPair[];
    constructor(_txSender: TxSender, _accountDataRetriever: IAccountDataRetriever, _blockchainInfoRetriever: IBlockchainInfoRetriever);
    createChannels(baseSeed: string, salt: string, channelsCount: number, startingBalance: number): Promise<KeyPair[]>;
}
export interface CreateChannelsParams {
    environment: Environment;
    baseSeed: string;
    salt: string;
    channelsCount: number;
    startingBalance: number;
}
export interface GenerateSeedsParams {
    baseSeed: string;
    salt: string;
    channelsCount: number;
}
