import { Server } from "@kinecosystem/kin-sdk";
import { RawTransaction, Transaction } from "./horizonModels";
import { TransactionId } from "../types";
import { TransactionHistoryParams } from "../kinClient";
export interface ITransactionRetriever {
    fetchTransaction(transactionId: TransactionId, simplified?: boolean): Promise<Transaction>;
}
export declare class TransactionRetriever implements ITransactionRetriever {
    private readonly _server;
    private readonly DEFAULT_ORDER;
    private readonly DEFAULT_LIMIT;
    constructor(_server: Server);
    fetchTransaction(transactionId: TransactionId, simplified?: boolean): Promise<Transaction | RawTransaction>;
    fetchTransactionHistory(params: TransactionHistoryParams, simplified?: boolean): Promise<Transaction[] | RawTransaction[]>;
    static fromStellarTransaction(transactionRecord: Server.TransactionRecord, simplified?: boolean): Transaction;
    static fromTransactionPayload(envelope: string, networkId: string, simplified?: boolean): Transaction;
}
